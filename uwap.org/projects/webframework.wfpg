>> import other-projects
>> title WebFramework

WebFramework
Cross-platform .NET library written in C# that allows you to create a web server for dynamic and/or static websites and web apps with ease.

Guides for WebFramework | green >> /guides/webframework

Changelog >> /changes/webframework

Repository on GitHub >> https://github.com/pmpwsk/WebFramework

Main features
- Events for different types of HTTP requests (app, API, post, upload, download) with objects for easy access to everything you need to handle those requests.
- Automatic SSL certificates using Let's Encrypt
- Pages and elements so you don't have to write any HTML code
- .wfpg files to quickly create static web pages
- Accounts with everything one would expect from an account
- Mail server (incoming and outgoing)
- Object-oriented database
- File server with server cache and browser cache management
- Worker to regularly update files, handle memory integrity, certificates and more
- Plugins (see more below)
- Option for usage as a local web server for local web apps as interfaces for proper apps on a computer
...and much more!
Most features have plugins as interfaces.

Installation
You can get the NuGet package here: <a href="https://www.nuget.org/packages/uwap.WebFramework/" target="_blank">uwap.WebFramework</a>
You can also download the source code from <a href="https://github.com/pmpwsk/WebFramework" target="_blank">GitHub</a> and add a reference to it from your project.
This library is based on ASP.NET, so it's best to create an empty ASP.NET project rather than a console app (those will terminate unless paused otherwise).

Official plugins
- Server (interface for server management by administrator accounts)
- Users (interface for accounts)
- Notes (web app for user's notes)
- Redirects (allows for static redirects)

Planned plugins
- Mail (mailbox system and interface for the mail server)
- Files (file management for admins and interface for a file server)
- Git (interface for a git server running on the same machine)
- Finances (simple finance manager for users)

Used libraries
- <a href="https://github.com/fszlin/certes">Certes</a> to talk to Let's Encrypt
- <a href="https://github.com/MichaCo/DnsClient.NET">DnsClient.NET</a> for DNS requests to find mail servers and check mail authentication
- <a href="https://github.com/jstedfast/MailKit">MailKit</a> to decode and encode emails from/to SMTP-compliant messages, send emails on the SMTP level once a suitable mail server for the recipient has been found, and validate DKIM signatures of messages against the keys found in the DNS records
- <a href="https://github.com/cosullivan/SmtpServer">SmtpServer</a> to listen for incoming emails on the raw SMTP level
- <a href="https://github.com/kspearrin/Otp.NET">Otp.NET</a> to generate and check time-based one-time passwords (TOTP) for two-factor authentication
- <a href="https://github.com/codebude/QRCoder">QRCoder</a> to generate QR codes for 2FA setup strings
- <a href="https://github.com/mheyman/Isopoh.Cryptography.Argon2">Isopoh.Cryptography.Argon2</a> to hash passwords using Argon2
- <a href="https://github.com/jsakamoto/ipaddressrange">IPAddressRange</a> to parse IP address ranges and check whether a given IP address is within that range (used for mail authentication)